package com.kikuma.kikumaapp.ui.confirmimage

import android.util.Log
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.kikuma.kikumaapp.Api.ApiConfig
import com.kikuma.kikumaapp.Api.RawApiResponse
import okhttp3.MediaType
import okhttp3.MediaType.Companion.toMediaTypeOrNull
import okhttp3.RequestBody
import okhttp3.RequestBody.Companion.toRequestBody
import org.json.JSONObject
import retrofit2.Call
import retrofit2.Callback
import retrofit2.Response

class ConfirmImageViewModel: ViewModel() {

    companion object {
        const val TAG = "ConfirmImageViewModel"
    }

    private val _modelResult = MutableLiveData<RawApiResponse>()
    val modelResult: LiveData<RawApiResponse> = _modelResult

    private val _isLoading = MutableLiveData<Boolean>()
    val isLoading: LiveData<Boolean> = _isLoading

    private val _imageBase64 = MutableLiveData<String>()
    val imageBase64: LiveData<String> = _imageBase64

    fun setImageBase64(imageBase64: String) {
        this._imageBase64.value = imageBase64
    }


    fun uploadImage(){
        _isLoading.value = true
        if(imageBase64.value != null){

            val body = getImageBase64Json().trimIndent().toRequestBody("application/json; charset=utf-8".toMediaTypeOrNull())

            val client = ApiConfig.getApiService().uploadImage(body)
            client.enqueue(object : Callback<RawApiResponse> {
                override fun onResponse(
                    call: Call<RawApiResponse>,
                    response: Response<RawApiResponse>
                ) {
                    _isLoading.value = false
                    if (response.isSuccessful) {
                        Log.d("ini rawModelResult", response.body().toString())
//                        _modelResult.value = response.body()
                    } else {
                        Log.e(TAG, "onFailure: ${response.message()}")
                    }
                }
                override fun onFailure(call: Call<RawApiResponse>, t: Throwable) {
                    _isLoading.value = false
                    Log.e(TAG, "onFailure: ${t.message.toString()}")
                }
            })
        }
    }

    private fun getImageBase64Json(): String{
        var json = JSONObject()
        json.put("image", "")
        return json.toString(4)
    }

}